@page "/"
@using CarRental.Business.Classes
@using CarRental.Common.Classes
@using CarRental.Common.Enums
@using CarRental.Common.Interfaces
@using CarRental.Common.Extensions
@inject BookingProcessor bookingProcess;

<PageTitle>Index</PageTitle>

<h1>Car Rental System</h1>

@{

    


}
<!-- Show error -->
@if(errorMessage != "")
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<h3>Vehicles</h3>
<br />
<!-- Vehicles -->
<div class="row my-3">
    <div><!-- old form-->
        <fieldset disabled=@IsDisabled> <!-- old fieldset-->
            <table id="1" style="width: 100%"st class="table table-bordered">
                <thead>
                    <tr>
                        <th style="width:12%">RegNo</th>
                        <th >Make</th>
                        <th >Vehicle type</th>
                        <th style="width:10%">Odometer</th>
                        <th style="width:10%">Cost Km</th>
                        <th style="width:10%">Kr Day</th>
                        <th >Action</th>
                        <th >Staus</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Input row-->
                    <tr>
                        <th>
                            <input @bind="regNo" class="form-control" placeholder="Reg number"/>
                        </th>
                        <th>
                            <select @bind="make" class="form-control">
                                <option selected>Select</option>
                                @foreach (string name in bookingProcess.ManufacturerNames)
                                {
                                    <option value="@name">@name</option>
                                }
                            </select>
                        </th>
                        <th>
                            <select @bind="type" class="form-control">
                                <option selected>Select</option>
                                @foreach (string name in bookingProcess.VehicleTypeNames)
                                {
                                    <option value="@name">@name</option>
                                }
                            </select>
                        </th>
                        <th>
                            <input @bind="odometer" class="form-control" placeholder="0" />
                        </th>
                        <th>
                            <input @bind="costPerKm" class="form-control" placeholder="0" />
                        </th>
                        <th>
                            <input @bind="costPerDay" class="form-control" placeholder="0" />                            
                        </th>
                        <th>
                            <button class="btn btn-primary" @onclick="() => AddVehicle(make, regNo, odometer, costPerKm, costPerDay, type)">Add</button>
                        </th>
                        @if(IsDisabled)
                        {
                            <th>
                                <button class="btn btn-process">Processing &#9202;</button>    
                            </th>                        
                        }                        
                    </tr>
                    <!-- Vehicle Rows-->
                    @foreach (IVehicle row in _vehicles)
                    {
                        <tr>
                            <th>@row.RegNumber</th>
                            <td>@row.Make</td>
                            <td>@row.Type</td>
                            <td>@row.Odometer</td>
                            <td>@row.CostPerKm</td>
                            <td>@row.CostPerDay</td>
                            @if (row.Status == VehicleStatus.Available)
                            {
                                <th>
                                    <select @bind="customerId" class="form-control">
                                        <option selected>Who rents?</option>
                                        @foreach (Customer person in _customers)
                                        {
                                            <option value="@person.Id">@person.GetName()</option>
                                        }
                                    </select>
                                    <button class="btn btn-success" @onclick="async () => await Rent(customerId, row.VehicleId)">Rent</button>
                                </th>
                                <td>
                                    <button type="button" class="btn btn-dark" style="pointer-events:none">Availabel</button>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input @bind="distance" class="form-control" placeholder="Ex 10" />
                                    <button class="btn btn-primary" @onclick="() => Return(row.VehicleId, distance)">Return</button>
                                </td>
                                <td>
                                    <div class="btn btn-danger active" style="cursor:default;">Booked</div>
                                </td>
                            }   
                        </tr>
                    }
                </tbody>
            </table>
        </fieldset>        
    </div>
</div>


<h3>Bookings</h3>
<br />
<!-- Table Bookings-->
<table class="table table-bordered my-3">
    <thead>
        <tr>
            <th>RegNo</th>
            <th>Customer</th>
            <th>Km Rented</th>
            <th>Km Returned</th>
            <th>Rented</th>
            <th>Returned</th>
            <th>Cost &yen;</th>
            <th>Staus</th>
        </tr>
    </thead>
    <tbody>        
        @foreach (Booking row in _bookings)             
        {
            <tr>
                <td>@bookingProcess.GetRegNumber(row.VehicleId, out infoMessage)</td>
                <td>@bookingProcess.GetFullName(row.CustomerId, out infoMessage)</td>
                <td>@row.OdometerRented</td>
                <td>@(row.OdometerReturned == 0 ? null : row.OdometerReturned)</td>
                <td>@row.RentDateToString()</td>
                <td>@row.ReturnDateToString()</td>
                <td>@row.TotalCost</td>
                <td>
                    @if (row.BookingIsClosed)
                    {
                        <div class="btn btn-static">Closed</div>
                    }
                    else
                    {
                        <div class="btn btn-static btn-booked">Open</div>
                    }
                </td>
            </tr>
        }
        
    </tbody>
</table>

<h3>Customers</h3>
<br />
<!-- Table Persons-->
<table class="table table-bordered mt-3 mb-5">
    <thead>
        <tr>
            <th>Person Number</th>
            <th>Name</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>   
        <tr>
            <th>
                <input @bind="peronsNumber" class="form-control" placeholder="yyyymmddnnnn"/>
            </th>
            <th>
                <input @bind="firstName" class="form-control" placeholder="name" />
                <input @bind="lastName" class="form-control" placeholder="surename"/>                               
            </th>
            <th>
                <button class="btn-outline-success" @onclick="() => AddPerson(peronsNumber, firstName, lastName)">Add</button>
            </th>
        </tr>
        @foreach (Customer row in _customers)
        {
            <tr>
                <th>@row.PersNumber</th>
                <td>@row.GetName()</td>
                <td>
                    <div class="btn btn-static">&#x2713; Verified</div>
                </td>
            </tr>
        }        
    </tbody>
</table>
<!-- check info message -->
<!-- Show info on problems loading booking result -->
@if (@infoMessage != "")
{
    <div class="alert alert-info" role="alert">
        @infoMessage
    </div>
}

@code{
    List<IPerson> _customers = new();
    List<IVehicle> _vehicles = new();
    List<IBooking> _bookings = new();
    // input Vehicle
    string? regNo = null, make = null, type = null;
    double? costPerKm = 0.0, costPerDay = 0.0;
    int? odometer = 0, distance = 0;

    // Customers
    int customerId = 0;
    string firstName = null, lastName = null, peronsNumber = null;

    // Application fields
    protected bool IsDisabled { get; set; }
    string errorMessage = null, infoMessage = "";

    protected override async void OnInitialized()
    {
        UpdateData();
        errorMessage = bookingProcess.ErrorMessage ?? "";
        IsDisabled = false;
    }

    void UpdateData()
    {
        _customers = bookingProcess.GeneralGetAll<IPerson>().ToList();
        _vehicles = bookingProcess.GeneralGetAll<IVehicle>().ToList();
        _bookings = bookingProcess.GeneralGetAll<IBooking>().ToList();
        errorMessage += bookingProcess.ErrorMessage == "" ? "" : $"\n{bookingProcess.ErrorMessage}";
    }

    void AddVehicle(string make, string regNum, int? inOdometer, double? costKm, double? costDay, string type)
    {
        // Add
        bookingProcess.AddVehicle(make, regNum, inOdometer, costKm, costDay, type);
        regNo = "";
        odometer = 0;
        costPerKm = 0;
        costPerDay = 0;
        // Get possible error
        errorMessage = bookingProcess.ErrorMessage;

        //Update
        UpdateData();

    }
    void AddPerson(string persNr, string name, string surname)
    {
        bookingProcess.AddIPerson(persNr, name, surname);
        peronsNumber = "";
        firstName = "";
        lastName = "";
        errorMessage = bookingProcess.ErrorMessage;
        UpdateData();
    }
    async Task Rent(int customerId, int vehicleId) 
    {
        // Add Booking
        IsDisabled = true;
        await bookingProcess.RentVehicle(customerId, vehicleId);
        IsDisabled = false;
        errorMessage = bookingProcess.ErrorMessage;

        //Update
        UpdateData();

    }
    void Return(int vehicleId, int? distance)
    {
        // Return
        bookingProcess.ReturnVehicle(vehicleId, distance);
        errorMessage = bookingProcess.ErrorMessage;
        UpdateData();
    }

   
}